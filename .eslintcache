[{"/home/riya/kanban/src/index.js":"1","/home/riya/kanban/src/components/App.js":"2","/home/riya/kanban/src/store/index.js":"3","/home/riya/kanban/src/components/List.js":"4","/home/riya/kanban/src/components/ListCard.js":"5","/home/riya/kanban/src/reducers/index.js":"6","/home/riya/kanban/src/reducers/listReducer.js":"7","/home/riya/kanban/src/components/ActionButton.js":"8","/home/riya/kanban/src/actions/listActions.js":"9","/home/riya/kanban/src/actions/index.js":"10","/home/riya/kanban/src/actions/cardActions.js":"11","/home/riya/kanban/src/components/BoardView.js":"12","/home/riya/kanban/src/components/InputForm.js":"13","/home/riya/kanban/src/components/ListView.js":"14","/home/riya/kanban/src/components/TodoList.js":"15","/home/riya/kanban/src/components/TodoItem.js":"16"},{"size":330,"mtime":1607439718896,"results":"17","hashOfConfig":"18"},{"size":1978,"mtime":1607495045060,"results":"19","hashOfConfig":"18"},{"size":202,"mtime":1607439684300,"results":"20","hashOfConfig":"18"},{"size":4520,"mtime":1607509150745,"results":"21","hashOfConfig":"18"},{"size":3888,"mtime":1607509627118,"results":"22","hashOfConfig":"18"},{"size":140,"mtime":1607447669577,"results":"23","hashOfConfig":"18"},{"size":4679,"mtime":1607458414054,"results":"24","hashOfConfig":"18"},{"size":2775,"mtime":1607509918471,"results":"25","hashOfConfig":"18"},{"size":881,"mtime":1607439907584,"results":"26","hashOfConfig":"18"},{"size":312,"mtime":1607448768828,"results":"27","hashOfConfig":"18"},{"size":459,"mtime":1607448904140,"results":"28","hashOfConfig":"18"},{"size":1961,"mtime":1607493925258,"results":"29","hashOfConfig":"18"},{"size":1194,"mtime":1607496914246,"results":"30","hashOfConfig":"18"},{"size":2511,"mtime":1607492250008,"results":"31","hashOfConfig":"18"},{"size":475,"mtime":1607492302699,"results":"32","hashOfConfig":"18"},{"size":885,"mtime":1607510323505,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"132qd8z",{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/riya/kanban/src/index.js",[],["70","71"],"/home/riya/kanban/src/components/App.js",["72"],"import React, { PureComponent } from 'react'\nimport { connect } from \"react-redux\";\nimport { Button } from \"react-bootstrap\"\nimport BoardView from \"./BoardView\"\nimport ListView from \"./ListView\"\nimport Pic from \"./pic1.png\"\nimport { faTable, faList } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nclass App extends PureComponent {\n  state = {\n    boardView: false\n  }\n  render() {\n    return (\n      <div className=\"m-4\">\n        <span className=\"text-heading\">Task Management</span>\n        {\n          this.state.boardView ?\n            (<div className=\"list-view m-4\">\n              <div>\n                < Button className=\"list-view-btn common-btn-style py-2 px-4\" onClick={() => this.setState({ boardView: false })}>\n                  <FontAwesomeIcon\n                    className=\"mr-2\"\n                    icon={faList}\n                    size=\"1x\"\n                    color=\"white\"\n                  />List View\n                </Button>\n              </div>\n\n              <BoardView />\n            </div>)\n            :\n            (\n              <div className=\"flex-column mt-2\">\n                <div className=\"board-view\">\n                  < Button className=\"common-btn-style py-2 px-4\" onClick={() => this.setState({ boardView: true })}>\n                    <FontAwesomeIcon\n                      className=\"mr-2\"\n                      icon={faTable}\n                      size=\"1x\"\n                      color=\"white\"\n                    />Board View</Button>\n                </div>\n                <div><ListView /></div>\n              </div>\n            )\n        }\n        {/* <div className=\"image-style\">\n          <img className=\"img-child\" src={Pic} style={{ height: 250, width: 550 }} />\n        </div> */}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n})\n\nexport default connect(mapStateToProps)(App);\n","/home/riya/kanban/src/store/index.js",["73","74","75"],"import { createStore, applyMiddleware, compose } from \"redux\";\nimport reduxThunk from \"redux-thunk\";\nimport rootReducer from \"../reducers\"\n\n\nconst store = createStore(rootReducer)\n\nexport default store;","/home/riya/kanban/src/components/List.js",["76"],"/home/riya/kanban/src/components/ListCard.js",["77"],"/home/riya/kanban/src/reducers/index.js",[],"/home/riya/kanban/src/reducers/listReducer.js",["78"],"import uuid from 'react-uuid'\nimport { CONSTANTS } from \"../actions\"\n\nconst InitialState = [\n    {\n        title: \"To-do\",\n        id: uuid(),\n        cards: [\n            {\n                id: uuid(),\n                text: \"Bring milk from grocery store\"\n            },\n            {\n                id: uuid(),\n                text: \"Review project thesis\"\n            }\n        ]\n    }\n]\n\nconst listReducer = (state = InitialState, action) => {\n    switch (action.type) {\n        case CONSTANTS.ADD_LIST:\n            const newList = {\n                title: action.payload,\n                id: uuid(),\n                cards: []\n            }\n            return [...state, newList]\n        case CONSTANTS.ADD_CARD:\n            console.log(\"m here in reducer\", action.payload)\n            {\n                const newCard = {\n                    text: action.payload.text,\n                    id: uuid()\n                }\n                const newState = JSON.parse(JSON.stringify(state)).map(i => {\n                    if (i.id === action.payload.listId) {\n                        return {\n                            ...i,\n                            cards: [...i.cards, newCard]\n                        };\n                    }\n                    else {\n                        return i\n                    }\n                })\n                console.log(\"m here in reducer so check state:\", newState)\n                return newState\n            }\n        case CONSTANTS.DRAG_HAPPENED:\n            {\n                const { droppableIdStart,\n                    droppableIdEnd,\n                    droppableIndexStart,\n                    droppableIndexEnd,\n                    draggableId,\n                    type\n                } = action.payload;\n\n                const newDragState = [...state];\n                if (type === \"list\") {\n                    const list = newDragState.splice(droppableIndexStart, 1);\n                    newDragState.splice(droppableIndexEnd, 0, ...list);\n                    return newDragState\n                }\n\n                if (droppableIdStart === droppableIdEnd) {\n                    const list = state.find(list => droppableIdStart === list.id)\n                    const card = list.cards.splice(droppableIndexStart, 1)\n                    list.cards.splice(droppableIndexEnd, 0, ...card)\n                }\n                if (droppableIdStart !== droppableIdEnd) {\n                    const listStart = state.find(list => droppableIdStart === list.id);\n                    const card = listStart.cards.splice(droppableIndexStart, 1);\n                    const listEnd = state.find(list => droppableIdEnd === list.id)\n                    listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n                }\n                return newDragState\n            }\n        case CONSTANTS.EDIT_LIST_TITLE: {\n            const { listId, newTitle } = action.payload;\n            let elementPos = state.map(function (x) { return x.id; }).indexOf(listId);\n            const list = state[elementPos];\n            list.title = newTitle;\n            const newListState = state.map(i => i)\n            return newListState;\n        }\n        case CONSTANTS.DELETE_LIST: {\n            const { listId } = action.payload;\n            const newDelState = JSON.parse(JSON.stringify(state));\n            let elementPos = state.map(function (x) { return x.id; }).indexOf(listId);\n            newDelState.splice(elementPos, 1)\n            return newDelState;\n        }\n        case CONSTANTS.EDIT_CARD: {\n            const { id, newText, listId } = action.payload;\n            const newCardState = JSON.parse(JSON.stringify(state));\n            let elementPos = newCardState.map(function (x) {\n                return x.id;\n            }).indexOf(listId);\n            let cardPos = newCardState[elementPos].cards.map(function (x) { return x.id; }).indexOf(id);\n            const card = newCardState[elementPos].cards[cardPos];\n            card.text = newText;\n            return newCardState\n        }\n        case CONSTANTS.DELETE_CARD: {\n            const { listId, id } = action.payload;\n            console.log(\"m here bitch listId:\", listId, \"id:\", id)\n            const newCardDelState = JSON.parse(JSON.stringify(state));\n            let elementPos = newCardDelState.map(function (x) {\n                return x.id;\n            }).indexOf(listId);\n            let cardPos = newCardDelState[elementPos].cards.map(function (x) { return x.id; }).indexOf(id);\n            newCardDelState[elementPos].cards.splice(cardPos, 1)\n\n            return newCardDelState;\n        }\n        default:\n            return state;\n    }\n}\n\nexport default listReducer;","/home/riya/kanban/src/components/ActionButton.js",["79","80","81"],"/home/riya/kanban/src/actions/listActions.js",[],"/home/riya/kanban/src/actions/index.js",[],"/home/riya/kanban/src/actions/cardActions.js",[],"/home/riya/kanban/src/components/BoardView.js",[],"/home/riya/kanban/src/components/InputForm.js",["82","83","84","85"],"/home/riya/kanban/src/components/ListView.js",[],"/home/riya/kanban/src/components/TodoList.js",[],"/home/riya/kanban/src/components/TodoItem.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":6,"column":8,"nodeType":"92","messageId":"93","endLine":6,"endColumn":11},{"ruleId":"90","severity":1,"message":"94","line":1,"column":23,"nodeType":"92","messageId":"93","endLine":1,"endColumn":38},{"ruleId":"90","severity":1,"message":"95","line":1,"column":40,"nodeType":"92","messageId":"93","endLine":1,"endColumn":47},{"ruleId":"90","severity":1,"message":"96","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":18},{"ruleId":"90","severity":1,"message":"97","line":3,"column":27,"nodeType":"92","messageId":"93","endLine":3,"endColumn":36},{"ruleId":"90","severity":1,"message":"98","line":10,"column":8,"nodeType":"92","messageId":"93","endLine":10,"endColumn":17},{"ruleId":"90","severity":1,"message":"99","line":57,"column":21,"nodeType":"92","messageId":"93","endLine":57,"endColumn":32},{"ruleId":"90","severity":1,"message":"100","line":2,"column":8,"nodeType":"92","messageId":"93","endLine":2,"endColumn":16},{"ruleId":"90","severity":1,"message":"101","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":16},{"ruleId":"90","severity":1,"message":"102","line":3,"column":18,"nodeType":"92","messageId":"93","endLine":3,"endColumn":22},{"ruleId":"90","severity":1,"message":"103","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":30},{"ruleId":"90","severity":1,"message":"104","line":4,"column":10,"nodeType":"92","messageId":"93","endLine":4,"endColumn":17},{"ruleId":"90","severity":1,"message":"105","line":5,"column":10,"nodeType":"92","messageId":"93","endLine":5,"endColumn":17},{"ruleId":"90","severity":1,"message":"106","line":5,"column":19,"nodeType":"92","messageId":"93","endLine":5,"endColumn":26},"no-native-reassign",["107"],"no-negated-in-lhs",["108"],"no-unused-vars","'Pic' is defined but never used.","Identifier","unusedVar","'applyMiddleware' is defined but never used.","'compose' is defined but never used.","'reduxThunk' is defined but never used.","'useEffect' is defined but never used.","'InputForm' is defined but never used.","'draggableId' is assigned a value but never used.","'TextArea' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'PureComponent' is defined but never used.","'connect' is defined but never used.","'addList' is defined but never used.","'addCard' is defined but never used.","no-global-assign","no-unsafe-negation"]