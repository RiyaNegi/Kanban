[{"/home/riya/kanban/src/index.js":"1","/home/riya/kanban/src/components/App.js":"2","/home/riya/kanban/src/store/index.js":"3","/home/riya/kanban/src/components/List.js":"4","/home/riya/kanban/src/components/ListCard.js":"5","/home/riya/kanban/src/reducers/index.js":"6","/home/riya/kanban/src/reducers/listReducer.js":"7","/home/riya/kanban/src/components/ActionButton.js":"8","/home/riya/kanban/src/actions/listActions.js":"9","/home/riya/kanban/src/actions/index.js":"10","/home/riya/kanban/src/actions/cardActions.js":"11","/home/riya/kanban/src/components/BoardView.js":"12","/home/riya/kanban/src/components/InputForm.js":"13","/home/riya/kanban/src/reducers/cardReducer.js":"14"},{"size":330,"mtime":1607439718896,"results":"15","hashOfConfig":"16"},{"size":742,"mtime":1607366850236,"results":"17","hashOfConfig":"16"},{"size":202,"mtime":1607439684300,"results":"18","hashOfConfig":"16"},{"size":4438,"mtime":1607442515807,"results":"19","hashOfConfig":"16"},{"size":3489,"mtime":1607445699570,"results":"20","hashOfConfig":"16"},{"size":140,"mtime":1607447669577,"results":"21","hashOfConfig":"16"},{"size":4693,"mtime":1607448606358,"results":"22","hashOfConfig":"16"},{"size":2260,"mtime":1607433040681,"results":"23","hashOfConfig":"16"},{"size":881,"mtime":1607439907584,"results":"24","hashOfConfig":"16"},{"size":279,"mtime":1607442735784,"results":"25","hashOfConfig":"16"},{"size":322,"mtime":1607446620254,"results":"26","hashOfConfig":"16"},{"size":1953,"mtime":1607439306111,"results":"27","hashOfConfig":"16"},{"size":1189,"mtime":1607433035473,"results":"28","hashOfConfig":"16"},{"size":30,"mtime":1607447659898,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"132qd8z",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/riya/kanban/src/index.js",[],"/home/riya/kanban/src/components/App.js",[],["61","62"],"/home/riya/kanban/src/store/index.js",["63","64","65"],"/home/riya/kanban/src/components/List.js",[],"/home/riya/kanban/src/components/ListCard.js",["66"],"/home/riya/kanban/src/reducers/index.js",[],"/home/riya/kanban/src/reducers/listReducer.js",["67"],"/home/riya/kanban/src/components/ActionButton.js",["68","69","70"],"import React, { PureComponent } from \"react\";\nimport TextArea from \"react-textarea-autosize\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport InputForm from \"./InputForm\"\nclass ActionButton extends PureComponent {\n    state = {\n        formOpen: false,\n        text: \"\"\n    }\n\n    setOpen = () => {\n        this.setState({\n            formOpen: true\n        }\n        )\n    }\n\n    closeForm = () => {\n        this.setState({\n            formOpen: false\n        }\n        )\n    }\n\n    handleInputChange = e => {\n        this.setState({\n            text: e.target.value\n        });\n    };\n\n    handleAddList = () => {\n        const { dispatch } = this.props;\n        const { text } = this.state;\n        if (text) {\n            dispatch(addList(text))\n            this.setState({\n                text: \"\"\n            })\n        }\n    }\n\n    handleAddCard = () => {\n        const { dispatch, listId } = this.props;\n        const { text } = this.state;\n        if (text) {\n            dispatch(addCard(listId, text))\n            this.setState({\n                text: \"\"\n            })\n        }\n    }\n\n\n    renderAddButton = () => {\n        const { list } = this.props;\n        const buttonText = list ? \"Add another list\" : \"Add another card\"\n        return (\n            <div onClick={this.setOpen} className={list ? \"list-text  p-3\" : \"card-txt\"}>\n                <div>+ {buttonText}</div>\n            </div>\n        );\n    };\n\n    renderForm = () => {\n        const { list } = this.props\n        const placeholder = list ? \"Enter List tile\" : \"Enter Card title\";\n        const buttonTitle = list ? \"Add List\" : \"Add Card\";\n\n\n        return (\n            <InputForm handleAddList={this.handleAddList}\n                text={this.state.text}\n                onChange={this.handleInputChange}\n                closeForm={this.closeForm}\n                handleAddCard={this.handleAddCard}\n                list={list ? list : \"\"}\n            />\n        )\n    }\n\n    render() {\n        return this.state.formOpen ? this.renderForm() : this.renderAddButton();\n    }\n}\n\nexport default connect()(ActionButton);","/home/riya/kanban/src/actions/listActions.js",[],"/home/riya/kanban/src/actions/index.js",[],"/home/riya/kanban/src/actions/cardActions.js",[],"/home/riya/kanban/src/components/BoardView.js",[],"/home/riya/kanban/src/components/InputForm.js",["71","72","73","74","75"],"import React, { PureComponent } from \"react\";\nimport TextArea from \"react-textarea-autosize\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\n\nconst InputForm = React.memo(\n    ({ list, text = \"\", onChange, closeForm, children, buttonTitle, placeholder, handleAddCard, handleAddList }) => {\n        const placeholder = list\n            ? \"Enter list title...\"\n            : \"Enter the text for this card...\";\n\n        const handleClick = () =>\n            list ? handleAddList() : handleAddCard()\n\n        return (<div>\n            <Card\n                style={{ minHeight: 80, minWidth: 270 }}\n            >\n                <TextArea\n                    placeholder={placeholder}\n                    autoFocus\n                    value={text}\n                    onChange={e => onChange(e)}\n                    onBlur={closeForm}\n                    style={{ resize: \"none\", width: \"100%\", outline: \"none\", border: \"none \" }}\n                />\n            </Card>\n            <div className=\"mt-2\">\n                <Button variant=\"success\" onMouseDown={handleClick}>{buttonTitle}</Button>\n                <Button className=\"close-button\" >X</Button>\n            </div>\n        </div>)\n    }\n)\n\nexport default InputForm","/home/riya/kanban/src/reducers/cardReducer.js",["76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":1,"column":23,"nodeType":"83","messageId":"84","endLine":1,"endColumn":38},{"ruleId":"81","severity":1,"message":"85","line":1,"column":40,"nodeType":"83","messageId":"84","endLine":1,"endColumn":47},{"ruleId":"81","severity":1,"message":"86","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":18},{"ruleId":"81","severity":1,"message":"87","line":10,"column":8,"nodeType":"83","messageId":"84","endLine":10,"endColumn":17},{"ruleId":"81","severity":1,"message":"88","line":87,"column":21,"nodeType":"83","messageId":"84","endLine":87,"endColumn":32},{"ruleId":"81","severity":1,"message":"89","line":2,"column":8,"nodeType":"83","messageId":"84","endLine":2,"endColumn":16},{"ruleId":"81","severity":1,"message":"90","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":16},{"ruleId":"81","severity":1,"message":"91","line":3,"column":18,"nodeType":"83","messageId":"84","endLine":3,"endColumn":22},{"ruleId":"81","severity":1,"message":"92","line":1,"column":17,"nodeType":"83","messageId":"84","endLine":1,"endColumn":30},{"ruleId":"81","severity":1,"message":"93","line":4,"column":10,"nodeType":"83","messageId":"84","endLine":4,"endColumn":17},{"ruleId":"81","severity":1,"message":"94","line":5,"column":10,"nodeType":"83","messageId":"84","endLine":5,"endColumn":17},{"ruleId":"81","severity":1,"message":"95","line":5,"column":19,"nodeType":"83","messageId":"84","endLine":5,"endColumn":26},{"ruleId":"96","severity":1,"message":"97","line":9,"column":15,"nodeType":"83","messageId":"98","endLine":9,"endColumn":26},{"ruleId":"81","severity":1,"message":"99","line":1,"column":8,"nodeType":"83","messageId":"84","endLine":1,"endColumn":12},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-unused-vars","'applyMiddleware' is defined but never used.","Identifier","unusedVar","'compose' is defined but never used.","'reduxThunk' is defined but never used.","'InputForm' is defined but never used.","'draggableId' is assigned a value but never used.","'TextArea' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'PureComponent' is defined but never used.","'connect' is defined but never used.","'addList' is defined but never used.","'addCard' is defined but never used.","no-redeclare","'placeholder' is already defined.","redeclared","'uuid' is defined but never used.","no-global-assign","no-unsafe-negation"]