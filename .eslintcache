[{"/home/riya/kanban/src/index.js":"1","/home/riya/kanban/src/components/App.js":"2","/home/riya/kanban/src/store/index.js":"3","/home/riya/kanban/src/components/List.js":"4","/home/riya/kanban/src/components/ListCard.js":"5","/home/riya/kanban/src/reducers/index.js":"6","/home/riya/kanban/src/reducers/listReducer.js":"7","/home/riya/kanban/src/components/ActionButton.js":"8","/home/riya/kanban/src/actions/listActions.js":"9","/home/riya/kanban/src/actions/index.js":"10","/home/riya/kanban/src/actions/cardActions.js":"11","/home/riya/kanban/src/components/BoardView.js":"12","/home/riya/kanban/src/components/InputForm.js":"13"},{"size":512,"mtime":1607423795841,"results":"14","hashOfConfig":"15"},{"size":742,"mtime":1607366850236,"results":"16","hashOfConfig":"15"},{"size":536,"mtime":1607423004366,"results":"17","hashOfConfig":"15"},{"size":4337,"mtime":1607436183008,"results":"18","hashOfConfig":"15"},{"size":870,"mtime":1607433426111,"results":"19","hashOfConfig":"15"},{"size":140,"mtime":1607329744081,"results":"20","hashOfConfig":"15"},{"size":3834,"mtime":1607437805660,"results":"21","hashOfConfig":"15"},{"size":2260,"mtime":1607433040681,"results":"22","hashOfConfig":"15"},{"size":734,"mtime":1607436244749,"results":"23","hashOfConfig":"15"},{"size":220,"mtime":1607426852189,"results":"24","hashOfConfig":"15"},{"size":171,"mtime":1607354615059,"results":"25","hashOfConfig":"15"},{"size":1953,"mtime":1607415727609,"results":"26","hashOfConfig":"15"},{"size":1189,"mtime":1607433035473,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"132qd8z",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},"/home/riya/kanban/src/index.js",[],["58","59"],"/home/riya/kanban/src/components/App.js",[],"/home/riya/kanban/src/store/index.js",["60"],"import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n    key: \"root\",\n    storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n    let store = createStore(persistedReducer, applyMiddleware(thunk));\n    let persistor = persistStore(store);\n    return { store, persistor };\n};","/home/riya/kanban/src/components/List.js",[],"/home/riya/kanban/src/components/ListCard.js",[],"/home/riya/kanban/src/reducers/index.js",[],"/home/riya/kanban/src/reducers/listReducer.js",["61"],"/home/riya/kanban/src/components/ActionButton.js",["62","63","64"],"import React, { PureComponent } from \"react\";\nimport TextArea from \"react-textarea-autosize\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport InputForm from \"./InputForm\"\nclass ActionButton extends PureComponent {\n    state = {\n        formOpen: false,\n        text: \"\"\n    }\n\n    setOpen = () => {\n        this.setState({\n            formOpen: true\n        }\n        )\n    }\n\n    closeForm = () => {\n        this.setState({\n            formOpen: false\n        }\n        )\n    }\n\n    handleInputChange = e => {\n        this.setState({\n            text: e.target.value\n        });\n    };\n\n    handleAddList = () => {\n        const { dispatch } = this.props;\n        const { text } = this.state;\n        if (text) {\n            dispatch(addList(text))\n            this.setState({\n                text: \"\"\n            })\n        }\n    }\n\n    handleAddCard = () => {\n        const { dispatch, listId } = this.props;\n        const { text } = this.state;\n        if (text) {\n            dispatch(addCard(listId, text))\n            this.setState({\n                text: \"\"\n            })\n        }\n    }\n\n\n    renderAddButton = () => {\n        const { list } = this.props;\n        const buttonText = list ? \"Add another list\" : \"Add another card\"\n        return (\n            <div onClick={this.setOpen} className={list ? \"list-text  p-3\" : \"card-txt\"}>\n                <div>+ {buttonText}</div>\n            </div>\n        );\n    };\n\n    renderForm = () => {\n        const { list } = this.props\n        const placeholder = list ? \"Enter List tile\" : \"Enter Card title\";\n        const buttonTitle = list ? \"Add List\" : \"Add Card\";\n\n\n        return (\n            <InputForm handleAddList={this.handleAddList}\n                text={this.state.text}\n                onChange={this.handleInputChange}\n                closeForm={this.closeForm}\n                handleAddCard={this.handleAddCard}\n                list={list ? list : \"\"}\n            />\n        )\n    }\n\n    render() {\n        return this.state.formOpen ? this.renderForm() : this.renderAddButton();\n    }\n}\n\nexport default connect()(ActionButton);","/home/riya/kanban/src/actions/listActions.js",[],"/home/riya/kanban/src/actions/index.js",[],"/home/riya/kanban/src/actions/cardActions.js",[],"/home/riya/kanban/src/components/BoardView.js",[],"/home/riya/kanban/src/components/InputForm.js",["65","66","67","68","69"],"import React, { PureComponent } from \"react\";\nimport TextArea from \"react-textarea-autosize\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\n\nconst InputForm = React.memo(\n    ({ list, text = \"\", onChange, closeForm, children, buttonTitle, placeholder, handleAddCard, handleAddList }) => {\n        const placeholder = list\n            ? \"Enter list title...\"\n            : \"Enter the text for this card...\";\n\n        const handleClick = () =>\n            list ? handleAddList() : handleAddCard()\n\n        return (<div>\n            <Card\n                style={{ minHeight: 80, minWidth: 270 }}\n            >\n                <TextArea\n                    placeholder={placeholder}\n                    autoFocus\n                    value={text}\n                    onChange={e => onChange(e)}\n                    onBlur={closeForm}\n                    style={{ resize: \"none\", width: \"100%\", outline: \"none\", border: \"none \" }}\n                />\n            </Card>\n            <div className=\"mt-2\">\n                <Button variant=\"success\" onMouseDown={handleClick}>{buttonTitle}</Button>\n                <Button className=\"close-button\" >X</Button>\n            </div>\n        </div>)\n    }\n)\n\nexport default InputForm",{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":15,"column":1,"nodeType":"76","endLine":19,"endColumn":3},{"ruleId":"77","severity":1,"message":"78","line":87,"column":21,"nodeType":"79","messageId":"80","endLine":87,"endColumn":32},{"ruleId":"77","severity":1,"message":"81","line":2,"column":8,"nodeType":"79","messageId":"80","endLine":2,"endColumn":16},{"ruleId":"77","severity":1,"message":"82","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":16},{"ruleId":"77","severity":1,"message":"83","line":3,"column":18,"nodeType":"79","messageId":"80","endLine":3,"endColumn":22},{"ruleId":"77","severity":1,"message":"84","line":1,"column":17,"nodeType":"79","messageId":"80","endLine":1,"endColumn":30},{"ruleId":"77","severity":1,"message":"85","line":4,"column":10,"nodeType":"79","messageId":"80","endLine":4,"endColumn":17},{"ruleId":"77","severity":1,"message":"86","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":17},{"ruleId":"77","severity":1,"message":"87","line":5,"column":19,"nodeType":"79","messageId":"80","endLine":5,"endColumn":26},{"ruleId":"88","severity":1,"message":"89","line":9,"column":15,"nodeType":"79","messageId":"90","endLine":9,"endColumn":26},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'draggableId' is assigned a value but never used.","Identifier","unusedVar","'TextArea' is defined but never used.","'Button' is defined but never used.","'Card' is defined but never used.","'PureComponent' is defined but never used.","'connect' is defined but never used.","'addList' is defined but never used.","'addCard' is defined but never used.","no-redeclare","'placeholder' is already defined.","redeclared","no-global-assign","no-unsafe-negation"]