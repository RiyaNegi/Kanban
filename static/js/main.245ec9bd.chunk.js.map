{"version":3,"sources":["actions/listActions.js","actions/cardActions.js","actions/index.js","components/InputForm.js","components/ListCard.js","components/ActionButton.js","components/List.js","components/BoardView.js","components/TodoItem.js","components/TodoList.js","components/ListView.js","components/App.js","reducers/listReducer.js","reducers/index.js","store/index.js","index.js"],"names":["addList","title","type","CONSTANTS","ADD_LIST","payload","sort","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","draggableId","DRAG_HAPPENED","addCard","listId","text","ADD_CARD","deleteCard","id","DELETE_CARD","EDIT_LIST_TITLE","DELETE_LIST","EDIT_CARD","InputForm","React","memo","list","onChange","closeForm","buttonTitle","children","placeholder","handleAddCard","handleAddList","Card","style","minHeight","minWidth","autoFocus","value","e","onBlur","resize","width","outline","border","className","Button","variant","onMouseDown","icon","faTimes","color","CardContainer","styled","div","connect","index","dispatch","useState","isEditing","setIsEditing","cardText","setText","saveCard","preventDefault","newText","editCard","handleDeleteCard","target","handleChange","borderRadius","String","provided","ref","innerRef","draggableProps","dragHandleProps","Body","Dropdown","Toggle","faEllipsisV","size","Menu","Item","onClick","ActionButton","state","formOpen","setOpen","setState","handleInputChange","props","renderAddButton","buttonText","renderForm","this","PureComponent","ListContainer","cards","listTitle","setListTitle","fixTitle","setFixTitle","handleFocus","select","handleCancel","handleFinishEditing","newTitle","editTitle","handleDeleteList","deleteList","droppableId","droppableProps","onFocus","faEdit","map","i","App","onDragEnd","result","destination","source","lists","direction","TodoItem","onDeleteItem","event","deleteItem","float","marginTop","Component","TodoList","console","log","x","ListView","handleInput","handleAddItem","newItem","uuid","concat","handleDeleteItem","cardId","updatedItems","filter","backgroundColor","placeHolder","boardView","faList","BoardView","faTable","InitialState","listReducer","action","newList","newCard","newState","JSON","parse","stringify","newDragState","splice","find","card","listStart","listEnd","elementPos","indexOf","newListState","newDelState","newCardState","cardPos","newCardDelState","combineReducers","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","applyMiddleware","thunk","persistor","persistStore","Store","ReactDOM","render","loading","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.245ec9bd.chunk.js","sourcesContent":["import { CONSTANTS } from \"../actions\"\n\nexport const addList = title => {\n    return {\n        type: CONSTANTS.ADD_LIST,\n        payload: title\n    }\n}\n\nexport const sort = (\n    droppableIdStart,\n    droppableIdEnd,\n    droppableIndexStart,\n    droppableIndexEnd,\n    draggableId,\n    type\n) => {\n    return {\n        type: CONSTANTS.DRAG_HAPPENED,\n        payload: {\n            droppableIdStart,\n            droppableIdEnd,\n            droppableIndexStart,\n            droppableIndexEnd,\n            draggableId,\n            type\n        }\n    }\n}\n\nexport const editTitle = (listId, newTitle) => {\n    return {\n        type: CONSTANTS.EDIT_LIST_TITLE,\n        payload: {\n            listId,\n            newTitle\n        }\n    };\n};\n\nexport const deleteList = listId => {\n    return {\n        type: CONSTANTS.DELETE_LIST,\n        payload: {\n            listId\n        }\n    };\n};","import { CONSTANTS } from \"../actions\"\n\nexport const addCard = (listId, text) => {\n    return {\n        type: CONSTANTS.ADD_CARD,\n        payload: { text, listId }\n    }\n}\n\nexport const editCard = (id, listId, newText) => {\n    return {\n        type: CONSTANTS.EDIT_CARD,\n        payload: { id, listId, newText }\n    };\n};\n\nexport const deleteCard = (id, listId) => {\n    return {\n        type: CONSTANTS.DELETE_CARD,\n        payload: { id, listId }\n    };\n};","export * from \"./listActions\";\nexport * from \"./cardActions\";\n\nexport const CONSTANTS = {\n    ADD_CARD: \"ADD_CARD\",\n    ADD_LIST: \"ADD_LIST\",\n    DRAG_HAPPENED: \"DRAG_HAPPENED\",\n    EDIT_LIST_TITLE: \"EDIT_LIST_TITLE\",\n    DELETE_LIST: \"DELETE_LIST\",\n    EDIT_CARD: \"EDIT_CARD\",\n    DELETE_CARD: \"DELETE_CARD\",\n};","import React, { PureComponent } from \"react\";\nimport TextArea from \"react-textarea-autosize\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst InputForm = React.memo(\n    ({ list, text = \"\", onChange, closeForm, children, buttonTitle, placeholder, handleAddCard, handleAddList }) => {\n\n        const handleClick = () => {\n            list ? handleAddList() : handleAddCard()\n        }\n\n        return (<div>\n            <Card\n                style={{ minHeight: 40, minWidth: 280 }}\n            >\n                <TextArea\n                    placeholder={placeholder}\n                    autoFocus\n                    value={text}\n                    onChange={e => onChange(e)}\n                    onBlur={closeForm}\n                    style={{ resize: \"none\", width: \"100%\", outline: \"none\", border: \"none \" }}\n                />\n            </Card>\n            <div className=\"mt-2 mb-2\">\n                <Button variant=\"success\" onMouseDown={handleClick}>{buttonTitle}</Button>\n                <Button className=\"close-button\" ><FontAwesomeIcon\n                    icon={faTimes}\n                    color=\"white\"\n                /></Button>\n            </div>\n        </div>)\n    }\n)\n\nexport default InputForm","import React, { useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport styled from \"styled-components\";\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, Dropdown } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { editCard, deleteCard } from \"../actions\";\nimport InputForm from \"./InputForm\";\nimport TextArea from \"react-textarea-autosize\";\n\n\n\nconst CardContainer = styled.div`\npadding:4px;\nwhite-space: pre-line;\nfont-family: 'Rubik', sans-serif;\n`\nconst ListCard = ({ text, listId, id, index, dispatch }) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const [cardText, setText] = useState(text);\n\n    const closeForm = e => {\n        setIsEditing(false);\n    };\n\n    const handleChange = e => {\n        setText(e.target.value);\n    };\n\n    const saveCard = e => {\n        e.preventDefault();\n        dispatch(editCard(id, listId, cardText));\n        setIsEditing(false);\n    };\n\n    const handleDeleteCard = e => {\n        dispatch(deleteCard(id, listId));\n    };\n\n    const renderEditForm = () => {\n        return (\n            <div className=\"p-1\">\n                <Card\n                    style={{ minHeight: 80, minWidth: 270 }}\n                >\n                    <TextArea\n                        placeholder=\"Enter text here\"\n                        autoFocus\n                        value={cardText}\n                        onChange={e => handleChange(e)}\n                        onBlur={closeForm}\n                        style={{ resize: \"none\", width: \"100%\", outline: \"none\", border: \"none \", borderRadius: \"6px\" }}\n                    />\n                </Card>\n                <div className=\"mt-2 mb-2\">\n                    <Button variant=\"success\" onMouseDown={saveCard}>Save</Button>\n                    <Button className=\"close-button\" onMouseDown={closeForm}>X</Button>\n                </div>\n            </div>\n        );\n    };\n\n    const renderCard = () => {\n        return (\n            <Draggable draggableId={String(id)} index={index}>\n                {provided => (\n                    <CardContainer ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n                        <Card\n                            key={id}\n                            listId={listId}\n                            className=\" card-style card-wrap\"\n                        >\n                            <Card.Body className=\"d-flex justify-content-between\">\n                                <div className=\"d-flex align-items-center p-3 col-md-10\">{text}</div>\n                                <div className=\"mr-3 dp-class\">\n                                    <Dropdown>\n                                        <Dropdown.Toggle className=\"dropdown\">\n                                            <FontAwesomeIcon\n                                                icon={faEllipsisV}\n                                                size=\"1x\"\n                                                color=\"gray\"\n                                            />\n                                        </Dropdown.Toggle>\n\n                                        <Dropdown.Menu>\n                                            <Dropdown.Item onClick={() => setIsEditing(true)}>Edit</Dropdown.Item>\n                                            <Dropdown.Item onClick={handleDeleteCard}>Delete</Dropdown.Item>\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                    </CardContainer>)}\n            </Draggable>\n        )\n\n    }\n\n    return isEditing ? renderEditForm() : renderCard();\n\n}\n\nexport default connect()(ListCard)","import React, { PureComponent } from \"react\";\nimport TextArea from \"react-textarea-autosize\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { addList, addCard } from \"../actions\";\nimport InputForm from \"./InputForm\"\nclass ActionButton extends PureComponent {\n    state = {\n        formOpen: false,\n        text: \"\"\n    }\n\n    setOpen = () => {\n        this.setState({\n            formOpen: true\n        }\n        )\n    }\n\n    closeForm = () => {\n        this.setState({\n            formOpen: false\n        }\n        )\n    }\n\n    handleInputChange = e => {\n        this.setState({\n            text: e.target.value\n        });\n    };\n\n    handleAddList = () => {\n        const { dispatch } = this.props;\n        const { text } = this.state;\n        if (text) {\n            dispatch(addList(text))\n            this.setState({\n                text: \"\"\n            })\n        }\n    }\n\n    handleAddCard = () => {\n        const { dispatch, listId } = this.props;\n        const { text } = this.state;\n        if (text) {\n            dispatch(addCard(listId, text))\n            this.setState({\n                text: \"\"\n            })\n        }\n    }\n\n\n    renderAddButton = () => {\n        const { list } = this.props;\n        const buttonText = list ? \"Add another list\" : \"Add another card\"\n        return (\n            <div onClick={this.setOpen} className={list ? \"list-text  p-3 \" : \"card-txt mt-1 px-2 py-2 pb-2 mx-2\"}>\n                <div>+ {buttonText}</div>\n            </div>\n        );\n    };\n\n    renderForm = () => {\n        const { list } = this.props\n        const placeholder = list ? \"Enter List title\" : \"Write down your next task\";\n        const buttonTitle = list ? \"Add List\" : \"Add Card\";\n\n\n        return (\n            list ? (<div className=\"action-list\">\n                <InputForm placeholder={placeholder}\n                    buttonTitle={buttonTitle} handleAddList={this.handleAddList}\n                    text={this.state.text}\n                    onChange={this.handleInputChange}\n                    closeForm={this.closeForm}\n                    handleAddCard={this.handleAddCard}\n                    list={list ? list : \"\"}\n                /> </div>)\n                :\n                <div className=\"mt-2\">\n                    <InputForm placeholder={placeholder}\n                        buttonTitle={buttonTitle} handleAddList={this.handleAddList}\n                        text={this.state.text}\n                        onChange={this.handleInputChange}\n                        closeForm={this.closeForm}\n                        handleAddCard={this.handleAddCard}\n                        list={list ? list : \"\"}\n                    />\n                </div>\n\n        )\n    }\n\n    render() {\n        return this.state.formOpen ? this.renderForm() : this.renderAddButton();\n    }\n}\n\nexport default connect()(ActionButton);","import \"./App.css\"\nimport ListCard from \"./ListCard\"\nimport React, { useState, useEffect } from \"react\";\nimport ActionButton from \"./ActionButton\"\nimport { Droppable, Draggable } from \"react-beautiful-dnd\"\nimport styled from \"styled-components\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { editTitle, deleteList } from \"../actions\";\nimport { Button, Dropdown } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport TextArea from \"react-textarea-autosize\";\n\n\n\nconst ListContainer = styled.div`\nborder-radius: 3px;\nwidth: 300px;\npadding: 10px;\ncursor: pointer;\nfont-family: 'Rubik', sans-serif;\n`\n\nconst List = ({ title, cards, listId, index, dispatch }) => {\n    const [isEditing, setIsEditing] = useState(false);\n    const [listTitle, setListTitle] = useState(title);\n    const [fixTitle, setFixTitle] = useState(title);\n\n\n    const handleFocus = e => {\n        e.target.select();\n    };\n\n    const handleChange = e => {\n        e.preventDefault();\n        setFixTitle(e.target.value);\n    };\n\n    const handleCancel = e => {\n        setIsEditing(false);\n        setFixTitle(listTitle);\n    };\n\n    const handleFinishEditing = e => {\n        setIsEditing(false);\n        setListTitle(fixTitle);\n        dispatch(editTitle(listId, listTitle));\n    };\n\n    const handleDeleteList = () => {\n        dispatch(deleteList(listId));\n    };\n\n\n    const renderEditInput = () => {\n        return (\n            <div>\n                <form >\n                    <TextArea\n                        placeholder=\"Enter title\"\n                        onFocus={handleFocus}\n                        value={fixTitle}\n                        onChange={handleChange}\n                        style={{ resize: \"none\", width: \"100%\", outline: \"none\", border: \"none \", borderRadius: \"6px\" }}\n                    />\n                </form>\n                <div className=\"mt-2\">\n                    <Button variant=\"success\" onMouseDown={handleFinishEditing}>Update</Button>\n                    <Button className=\"close-button\" onClick={handleCancel}>X</Button>\n                </div>\n            </div >\n        );\n    };\n\n    return (\n        <Draggable draggableId={String(listId)} index={index}>\n            {provided => (\n                <ListContainer className=\"list-style\" {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}>\n                    <Droppable droppableId={String(listId)} type=\"card\">\n                        {provided => (\n                            <div {...provided.droppableProps} ref={provided.innerRef}>\n                                <div className=\"p-2\">\n                                    {isEditing ? renderEditInput() : (\n                                        <div className=\"d-flex justify-content-between mr-1\"> <h3>{listTitle}</h3>\n                                            <Dropdown>\n                                                <Dropdown.Toggle id=\"dropdown-no-caret\"\n                                                    className=\"dropdown\">\n                                                    <FontAwesomeIcon\n                                                        icon={faEdit}\n                                                        size=\"1x\"\n                                                        color=\"gray\"\n                                                    />\n                                                </Dropdown.Toggle>\n\n                                                <Dropdown.Menu>\n                                                    <Dropdown.Item onClick={() => setIsEditing(true)}>Edit</Dropdown.Item>\n                                                    <Dropdown.Item onClick={() => handleDeleteList()}>Delete</Dropdown.Item>\n                                                </Dropdown.Menu>\n                                            </Dropdown>\n                                        </div>)}\n\n                                </div>\n                                {cards.map((i, index) => (\n                                    <ListCard listId={listId} index={index} key={i.id} text={i.text} id={i.id} />\n                                ))}\n                                {provided.placeholder}\n                                <ActionButton listId={listId} />\n                            </div>\n                        )}\n                    </Droppable>\n                </ListContainer>\n            )}\n        </Draggable >\n    )\n}\n\nexport default connect()(List);","import React, { PureComponent } from 'react'\nimport List from \"./List\"\nimport { connect } from \"react-redux\";\nimport ActionButton from \"./ActionButton\"\nimport { DragDropContext, Droppable } from \"react-beautiful-dnd\"\nimport { sort } from \"../actions\";\nimport styled from \"styled-components\";\n\n\nconst ListContainer = styled.div`\n    display:flex;\n`\nclass App extends PureComponent {\n    onDragEnd = (result) => {\n        const { destination, source, draggableId, type } = result;\n        if (!destination) {\n            return\n        }\n        this.props.dispatch(sort(\n            source.droppableId,\n            destination.droppableId,\n            source.index,\n            destination.index,\n            draggableId,\n            type\n        ))\n    }\n\n    render() {\n        const lists = this.props.lists;\n        return (\n            <DragDropContext onDragEnd={this.onDragEnd}>\n                <div className=\"mt-4\">\n                    {/* <h2>Kanban board</h2> */}\n                    <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n                        {provided => (\n                            <ListContainer {...provided.droppableProps} ref={provided.innerRef}>\n                                {lists.map((i, index) => (\n                                    <div className=\"mr-3\">\n                                        <List listId={i.id} key={i.id} title={i.title} cards={i.cards} index={index} />\n                                    </div>\n                                )\n                                )}\n                                {provided.placeholder}\n                                <ActionButton list />\n                            </ListContainer>)}\n                    </Droppable>\n\n                </div>\n            </DragDropContext>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    lists: state.lists\n})\n\nexport default connect(mapStateToProps)(App);\n","import React, { Component } from 'react';\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nclass TodoItem extends Component {\n\n    onDeleteItem = (event) => {\n        this.props.deleteItem(this.props.id, this.props.listId)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"item-box mt-3 p-3 d-flex justify-content-between\">\n                    <div className=\"d-flex col-md-11\"> {this.props.text} </div>\n                    <button style={{ float: 'right', marginTop: \"-4px\" }} type=\"button\" className=\"delete-btn\" onClick={this.onDeleteItem}><FontAwesomeIcon\n                        className=\"mr-2\"\n                        icon={faTimes}\n                        color=\"red\"\n                    /></button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default TodoItem;","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\n\nclass TodoList extends Component {\n\n    render() {\n        console.log(\"props:\", this.props)\n        return (\n            <div className=\"mt-4\">\n                {this.props.lists.map(i => i.cards.map(x =>\n                    <TodoItem id={x.id} text={x.text} listId={i.id} deleteItem={this.props.deleteItem} />\n                ))}\n            </div>\n\n        );\n    }\n}\n\nexport default TodoList;\n\n","import React, { PureComponent } from 'react'\nimport { connect } from \"react-redux\";\nimport uuid from 'react-uuid';\nimport TodoList from \"./TodoList\"\nimport { addCard, deleteCard } from \"../actions\";\n\n\nclass ListView extends PureComponent {\n\n    state = {\n        value: \"\",\n        lists: this.props.lists,\n        listId: this.props.lists[0].id\n    }\n\n\n    handleInput = (event) => {\n        this.setState({\n            value: event.target.value\n        })\n    }\n\n    handleAddItem = (event) => {\n        event.preventDefault();\n        if (this.state.value === \"\")\n            return;\n        const newItem = {\n            id: uuid(),\n            text: this.state.value\n        }\n        const { dispatch } = this.props;\n        const { value, listId } = this.state;\n        if (this.state.value) {\n            dispatch(addCard(listId, value))\n            this.state.lists[0].cards.concat(newItem)\n            this.setState({\n                lists: this.state.lists,\n                value: \"\"\n            })\n        }\n    }\n\n    handleDeleteItem = (cardId, listId) => {\n        const updatedItems = this.state.lists.filter(i => {\n            return i.id !== cardId\n        })\n        this.state.lists[0].cards.concat(updatedItems)\n        this.setState({\n            lists: this.state.lists\n        })\n        const { dispatch } = this.props;\n        dispatch(deleteCard(cardId, listId));\n    }\n    render() {\n        const lists = this.props.lists;\n        console.log(\"list: \", lists)\n\n        return (\n            <div className=\"card-parent\">\n                <div className=\" card-box col-md-5 mt-3 px-4 py-4\">\n                    <div className=\"p-3\">\n                        <div className=\"box-heading\">My-Todo List</div>\n                        <hr style={{ backgroundColor: '#dadada' }} />\n                        <div className=\"d-flex mb-3 mt-4\">\n                            <input className=\"input-style \" placeHolder=\"Add New Todo\" type=\"input\" onChange={this.handleInput} value={this.state.value} />\n                            <button className=\"common-btn-style btn-style px-4 py-2 ml-4\" type=\"button\" onClick={this.handleAddItem}>Add</button>\n                        </div>\n                        <TodoList lists={lists} deleteItem={this.handleDeleteItem} listId={this.state.listId} />\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    lists: state.lists\n})\n\nexport default connect(mapStateToProps)(ListView);\n","import React, { PureComponent } from 'react'\nimport { connect } from \"react-redux\";\nimport { Button } from \"react-bootstrap\"\nimport BoardView from \"./BoardView\"\nimport ListView from \"./ListView\"\nimport { faTable, faList } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\nclass App extends PureComponent {\n  state = {\n    boardView: false\n  }\n  render() {\n    return (\n      <div className=\"m-4\">\n        <span className=\"text-heading\">Task Management Tool</span>\n        <hr style={{ backgroundColor: 'black' }} />\n        {\n          this.state.boardView ?\n            (<div className=\"list-view m-4\">\n              <div>\n                < Button className=\"list-view-btn common-btn-style py-2 px-4\" onClick={() => this.setState({ boardView: false })}>\n                  <FontAwesomeIcon\n                    className=\"mr-2\"\n                    icon={faList}\n                    size=\"1x\"\n                    color=\"white\"\n                  />List View\n                </Button>\n              </div>\n\n              <BoardView />\n            </div>)\n            :\n            (\n              <div className=\"flex-column mt-2\">\n                <div className=\"board-view\">\n                  < Button className=\"common-btn-style py-2 px-4\" onClick={() => this.setState({ boardView: true })}>\n                    <FontAwesomeIcon\n                      className=\"mr-2\"\n                      icon={faTable}\n                      size=\"1x\"\n                      color=\"white\"\n                    />Board View</Button>\n                </div>\n                <div><ListView /></div>\n              </div>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: state.lists\n})\n\nexport default connect(mapStateToProps)(App);\n","import uuid from 'react-uuid'\nimport { CONSTANTS } from \"../actions\"\n\nconst InitialState = [\n    {\n        title: \"To-do\",\n        id: uuid(),\n        cards: [\n            {\n                id: uuid(),\n                text: \"Bring milk and fruits from grocery store\"\n            },\n            {\n                id: uuid(),\n                text: \"Review final year project thesis\"\n            },\n            {\n                id: uuid(),\n                text: \"Push all codes from latest project to Git and write a Read-me for it\"\n            }\n        ]\n    }\n]\n\nconst listReducer = (state = InitialState, action) => {\n    switch (action.type) {\n        case CONSTANTS.ADD_LIST:\n            const newList = {\n                title: action.payload,\n                id: uuid(),\n                cards: []\n            }\n            return [...state, newList]\n        case CONSTANTS.ADD_CARD:\n            {\n                const newCard = {\n                    text: action.payload.text,\n                    id: uuid()\n                }\n                const newState = JSON.parse(JSON.stringify(state)).map(i => {\n                    if (i.id === action.payload.listId) {\n                        return {\n                            ...i,\n                            cards: [...i.cards, newCard]\n                        };\n                    }\n                    else {\n                        return i\n                    }\n                })\n                return newState\n            }\n        case CONSTANTS.DRAG_HAPPENED:\n            {\n                const { droppableIdStart,\n                    droppableIdEnd,\n                    droppableIndexStart,\n                    droppableIndexEnd,\n                    draggableId,\n                    type\n                } = action.payload;\n\n                const newDragState = [...state];\n                if (type === \"list\") {\n                    const list = newDragState.splice(droppableIndexStart, 1);\n                    newDragState.splice(droppableIndexEnd, 0, ...list);\n                    return newDragState\n                }\n\n                if (droppableIdStart === droppableIdEnd) {\n                    const list = state.find(list => droppableIdStart === list.id)\n                    const card = list.cards.splice(droppableIndexStart, 1)\n                    list.cards.splice(droppableIndexEnd, 0, ...card)\n                }\n                if (droppableIdStart !== droppableIdEnd) {\n                    const listStart = state.find(list => droppableIdStart === list.id);\n                    const card = listStart.cards.splice(droppableIndexStart, 1);\n                    const listEnd = state.find(list => droppableIdEnd === list.id)\n                    listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n                }\n                return newDragState\n            }\n        case CONSTANTS.EDIT_LIST_TITLE: {\n            const { listId, newTitle } = action.payload;\n            let elementPos = state.map(function (x) { return x.id; }).indexOf(listId);\n            const list = state[elementPos];\n            list.title = newTitle;\n            const newListState = state.map(i => i)\n            return newListState;\n        }\n        case CONSTANTS.DELETE_LIST: {\n            const { listId } = action.payload;\n            const newDelState = JSON.parse(JSON.stringify(state));\n            let elementPos = state.map(function (x) { return x.id; }).indexOf(listId);\n            newDelState.splice(elementPos, 1)\n            return newDelState;\n        }\n        case CONSTANTS.EDIT_CARD: {\n            const { id, newText, listId } = action.payload;\n            const newCardState = JSON.parse(JSON.stringify(state));\n            let elementPos = newCardState.map(function (x) {\n                return x.id;\n            }).indexOf(listId);\n            let cardPos = newCardState[elementPos].cards.map(function (x) { return x.id; }).indexOf(id);\n            const card = newCardState[elementPos].cards[cardPos];\n            card.text = newText;\n            return newCardState\n        }\n        case CONSTANTS.DELETE_CARD: {\n            const { listId, id } = action.payload;\n            const newCardDelState = JSON.parse(JSON.stringify(state));\n            let elementPos = newCardDelState.map(function (x) {\n                return x.id;\n            }).indexOf(listId);\n            let cardPos = newCardDelState[elementPos].cards.map(function (x) { return x.id; }).indexOf(id);\n            newCardDelState[elementPos].cards.splice(cardPos, 1)\n\n            return newCardDelState;\n        }\n        default:\n            return state;\n    }\n}\n\nexport default listReducer;","import { combineReducers } from \"redux\"\nimport listReducer from \"./listReducer\"\n\nexport default combineReducers({\n    lists: listReducer\n});","import { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"../reducers\";\nimport thunk from \"redux-thunk\";\n\nimport { persistStore, persistReducer } from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n    key: \"root\",\n    storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport default () => {\n    let store = createStore(persistedReducer, applyMiddleware(thunk));\n    let persistor = persistStore(store);\n    return { store, persistor };\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from \"react-redux\"\nimport Store from \"./store/index\"\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nconst { persistor, store } = Store();\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}